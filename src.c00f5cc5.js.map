{"version":3,"sources":["js/db/getFavoritesFilms.js","js/db/getQueuesFilms.js","js/db/removeAllFavoritesFilms.js","js/db/removeAllQueuesFilms.js","js/db/removeFavoriteFilm.js","js/db/removeQueueFilm.js","js/db/setFavoriteFilm.js","js/db/setQueueFilm.js","js/api/fetchSearchMovies.js","js/api/fetchFavoritesMovies.js","js/api/fetchDetailsMovie.js","js/api/fetchGenresMovies.js","js/main/arryGenres.js","js/main/preloader.js","js/main/renderMain.js","index.js"],"names":["getFavoritesFilms","BASE_URL","fetch","then","r","json","getQueuesFilms","removeAllFavoritesFilms","method","removeAllQueuesFilms","removeFavoriteFilm","id","removeQueueFilm","setFavoriteFilm","obj","headers","body","JSON","stringify","setQueueFilm","fetchSearchMovies","API_KEY","searchValue","movies","error","console","log","fetchFavoritesMovies","fetchDetailsMovie","fetchGenresMovies","genres","name","preloader","window","onload","document","classList","add","setTimeout","remove","refs","gallery","querySelector","getGenres","arrayId","arr","value","arryGenres","includes","push","length","splice","join","renderGallery","map","poster_path","title","release_date","genre_ids","releaseYear","split","data","insertAdjacentHTML","results","container"],"mappings":"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","file":"src.c00f5cc5.js","sourceRoot":"../src","sourcesContent":["const BASE_URL = 'https://filmoteka-f211d-default-rtdb.europe-west1.firebasedatabase.app';\n\nfunction getFavoritesFilms() {\n  return fetch(`${BASE_URL}/favorites.json`).then(r => r.json());\n}\n\nexport default getFavoritesFilms;\n","const BASE_URL = 'https://filmoteka-f211d-default-rtdb.europe-west1.firebasedatabase.app';\n\nfunction getQueuesFilms() {\n  return fetch(`${BASE_URL}/queues.json`).then(r => r.json());\n}\n\nexport default getQueuesFilms;\n","const BASE_URL = 'https://filmoteka-f211d-default-rtdb.europe-west1.firebasedatabase.app';\n\nfunction removeAllFavoritesFilms() {\n  return fetch(`${BASE_URL}/favorites.json`, {\n    method: 'DELETE',\n  });\n}\n\nexport default removeAllFavoritesFilms;\n","const BASE_URL = 'https://filmoteka-f211d-default-rtdb.europe-west1.firebasedatabase.app';\n\nfunction removeAllQueuesFilms() {\n  return fetch(`${BASE_URL}/queues.json`, {\n    method: 'DELETE',\n  });\n}\n\nexport default removeAllQueuesFilms;\n","const BASE_URL = 'https://filmoteka-f211d-default-rtdb.europe-west1.firebasedatabase.app';\n\nfunction removeFavoriteFilm(id) {\n  return fetch(`${BASE_URL}/favorites/${id}.json`, {\n    method: 'DELETE',\n  });\n}\n\nexport default removeFavoriteFilm;\n","const BASE_URL = 'https://filmoteka-f211d-default-rtdb.europe-west1.firebasedatabase.app';\n\nfunction removeQueueFilm(id) {\n  return fetch(`${BASE_URL}/queques/${id}.json`, {\n    method: 'DELETE',\n  });\n}\n\nexport default removeQueueFilm;\n","const BASE_URL = 'https://filmoteka-f211d-default-rtdb.europe-west1.firebasedatabase.app';\n\nfunction setFavoriteFilm(obj) {\n  return fetch(`${BASE_URL}/favorites.json`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(obj),\n  }).then(r => r.json());\n}\n\nexport default setFavoriteFilm;\n","const BASE_URL = 'https://filmoteka-f211d-default-rtdb.europe-west1.firebasedatabase.app';\n\nfunction setQueueFilm(obj) {\n  return fetch(`${BASE_URL}/queues.json`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(obj),\n  }).then(r => r.json());\n}\n\nexport default setQueueFilm;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '30b880cb8af36a78b014f41021bfb163';\n\nasync function fetchSearchMovies(searchValue) {\n  if (!searchValue) {\n    return;\n  }\n  try {\n    const response = await fetch(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchValue}`,\n    );\n    const movies = response.json();\n    return movies;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport default fetchSearchMovies;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '30b880cb8af36a78b014f41021bfb163';\n\nasync function fetchFavoritesMovies() {\n  try {\n    const response = await fetch(`${BASE_URL}/trending/movie/week?api_key=${API_KEY}`);\n    const movies = response.json();\n    return movies;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport default fetchFavoritesMovies;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '30b880cb8af36a78b014f41021bfb163';\n\nasync function fetchDetailsMovie(id) {\n  try {\n    const response = await fetch(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n    const movies = response.json();\n    return movies;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport default fetchDetailsMovie;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '30b880cb8af36a78b014f41021bfb163';\n\nasync function fetchGenresMovies() {\n  try {\n    const response = await fetch(`${BASE_URL}/genre/movie/list?api_key=${API_KEY}`);\n    const movies = response.json();\n    return movies;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport default fetchGenresMovies;\n","const genres = [\n  { id: 28, name: 'Action' },\n  { id: 12, name: 'Adventure' },\n  { id: 16, name: 'Animation' },\n  { id: 35, name: 'Comedy' },\n  { id: 80, name: 'Crime' },\n  { id: 99, name: 'Documentary' },\n  { id: 18, name: 'Drama' },\n  { id: 10751, name: 'Family' },\n  { id: 14, name: 'Fantasy' },\n  { id: 36, name: 'History' },\n  { id: 27, name: 'Horror' },\n  { id: 10402, name: 'Music' },\n  { id: 9648, name: 'Mystery' },\n  { id: 10749, name: 'Romance' },\n  { id: 878, name: 'Science Fiction' },\n  { id: 10770, name: 'TV Movie' },\n  { id: 53, name: 'Thriller' },\n  { id: 10752, name: 'War' },\n  { id: 37, name: 'Western' },\n];\n\nexport default genres;\n","function preloader() {\n    return  window.onload = function () {\n    document.body.classList.add('loaded_hiding');\n    window.setTimeout(function () {\n    document.body.classList.add('loaded');\n    document.body.classList.remove('loaded_hiding');\n    }, 500);\n    }\n}\n\nexport default preloader;","import fetchFavoritesMovies from '../api/fetchFavoritesMovies';\n\nimport fetchGenresMovies from '../api/fetchGenresMovies';\nimport arryGenres from './arryGenres';\n\nimport preloader from './preloader'\n\n\nconst refs = {\n  gallery: document.querySelector('.list_film'),\n};\n\nfunction getGenres(arrayId) {\n  const arr = [];\n  for (const value of arryGenres) {\n    if (arrayId.includes(value.id)) {\n      arr.push(value.name);\n    }\n  }\n  if (arrayId.length > 2) {\n    arr.splice(2, arr.length - 2, 'Other');\n  }\n\n  return arr.join(', ');\n}\n\nfunction renderGallery(movies) {\n  return movies\n    .map(({ id, poster_path, title, release_date, genre_ids }) => {\n      const releaseYear = release_date.split('-')[0];\n      return `\n      <li class='list_film_item' id=${id}>\n        <img style = \"border-radius: 5px\" src='https://image.tmdb.org/t/p/w500${poster_path}' alt='Обложка фильма' loading='lazy' />\n        <div class='info'>\n            <p class='info-title'>\n              <b>${title}</b>\n            </p>\n            <p class='info-date'>\n              <span>${getGenres(genre_ids)}</span>\n              <span>|</span>\n              <span>${releaseYear}</span>\n            </p>\n        </div>\n      </li>\n      `;\n    })\n    .join('');\n}\n\nfetchFavoritesMovies().then(data => {\n  preloader();\n  refs.gallery.insertAdjacentHTML('beforeend', renderGallery(data.results));\n});\n","//======= DB Firebase =======\nimport getFavoritesFilms from './js/db/getFavoritesFilms';\nimport getQueuesFilms from './js/db/getQueuesFilms';\nimport removeAllFavoritesFilms from './js/db/removeAllFavoritesFilms';\nimport removeAllQueuesFilms from './js/db/removeAllQueuesFilms';\nimport removeFavoriteFilm from './js/db/removeFavoriteFilm';\nimport removeQueueFilm from './js/db/removeQueueFilm';\nimport setFavoriteFilm from './js/db/setFavoriteFilm';\nimport setQueueFilm from './js/db/setQueueFilm';\n\n//======= API Service =======\nimport fetchSearchMovies from './js/api/fetchSearchMovies';\nimport fetchFavoritesMovies from './js/api/fetchFavoritesMovies';\nimport fetchDetailsMovie from './js/api/fetchDetailsMovie';\nimport fetchGenresMovies from './js/api/fetchGenresMovies';\n\n//======= Styles =======\nimport './sass/main.scss';\n\n//======= Main =======\nimport renderMain from './js/main/renderMain';\n\nconst refs = {\n  container: document.querySelector('.container'),\n};\n\n// fetchSearchMovies('marvel').then(data => {\n//   refs.container.insertAdjacentHTML('beforeend', renderGallery(data.results));\n// });\n\nfunction renderGallery(movies) {\n  return movies\n    .map(({ id, poster_path, title, release_date }) => {\n      const releaseYear = release_date.split('-')[0];\n      return `\n      <div class='photo-card' id=${id}>\n        <img src='https://image.tmdb.org/t/p/w500${poster_path}' alt='{{tags}}' loading='lazy' />\n        <div class='info'>\n            <p class='info-item'>\n              <b>${title}</b>\n            </p>\n            <p class='info-item'>\n              <span>${releaseYear}</span>\n            </p>\n        </div>\n      </div>\n      `;\n    })\n    .join('');\n}\n"]}