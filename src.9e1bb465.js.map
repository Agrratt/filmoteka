{"version":3,"sources":["js/db/getWatchesFilms.js","js/db/getQueuesFilms.js","js/db/removeAllWatchesFilms.js","js/db/removeAllQueuesFilms.js","js/db/removeWatchedFilm.js","js/db/removeQueueFilm.js","js/db/setWatchedFilm.js","js/db/setQueueFilm.js","js/api/fetchSearchMovies.js","js/api/fetchFavoritesMovies.js","js/api/fetchDetailsMovie.js","js/api/fetchGenresMovies.js","js/ollRefs/refs.js","js/main/arrayGenres.js","js/main/preloader.js","js/main/renderMain.js","js/main/renderMainLibrary.js","index.js"],"names":["getWatchesFilms","BASE_URL","fetch","then","r","json","getQueuesFilms","removeAllWatchesFilms","method","removeAllQueuesFilms","removeWatchedFilm","id","removeQueueFilm","setWatchedFilm","obj","headers","body","JSON","stringify","setQueueFilm","fetchSearchMovies","API_KEY","searchValue","movies","error","console","log","fetchFavoritesMovies","fetchDetailsMovie","fetchGenresMovies","refs","gallery","document","querySelector","library","home","navigate","genres","name","preloader","window","onload","classList","add","setTimeout","remove","getGenres","arrayId","arr","value","arrayGenres","includes","push","length","splice","join","renderGallery","map","poster_path","title","release_date","genre_ids","releaseYear","split","returnToHome","e","preventDefault","contains","data","innerHTML","insertAdjacentHTML","results","addEventListener","renderGalleryLibrary","vote_average","onFetchLibrary","Object","values"],"mappings":"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","file":"src.9e1bb465.js","sourceRoot":"../src","sourcesContent":["const BASE_URL = 'https://filmoteka-f211d-default-rtdb.europe-west1.firebasedatabase.app';\n\nfunction getWatchesFilms() {\n  return fetch(`${BASE_URL}/watches.json`).then(r => r.json());\n}\n\nexport default getWatchesFilms;\n","const BASE_URL = 'https://filmoteka-f211d-default-rtdb.europe-west1.firebasedatabase.app';\n\nfunction getQueuesFilms() {\n  return fetch(`${BASE_URL}/queues.json`).then(r => r.json());\n}\n\nexport default getQueuesFilms;\n","const BASE_URL = 'https://filmoteka-f211d-default-rtdb.europe-west1.firebasedatabase.app';\n\nfunction removeAllWatchesFilms() {\n  return fetch(`${BASE_URL}/watches.json`, {\n    method: 'DELETE',\n  });\n}\n\nexport default removeAllWatchesFilms;\n","const BASE_URL = 'https://filmoteka-f211d-default-rtdb.europe-west1.firebasedatabase.app';\n\nfunction removeAllQueuesFilms() {\n  return fetch(`${BASE_URL}/queues.json`, {\n    method: 'DELETE',\n  });\n}\n\nexport default removeAllQueuesFilms;\n","const BASE_URL = 'https://filmoteka-f211d-default-rtdb.europe-west1.firebasedatabase.app';\n\nfunction removeWatchedFilm(id) {\n  return fetch(`${BASE_URL}/watches/${id}.json`, {\n    method: 'DELETE',\n  });\n}\n\nexport default removeWatchedFilm;\n","const BASE_URL = 'https://filmoteka-f211d-default-rtdb.europe-west1.firebasedatabase.app';\n\nfunction removeQueueFilm(id) {\n  return fetch(`${BASE_URL}/queques/${id}.json`, {\n    method: 'DELETE',\n  });\n}\n\nexport default removeQueueFilm;\n","const BASE_URL = 'https://filmoteka-f211d-default-rtdb.europe-west1.firebasedatabase.app';\n\nfunction setWatchedFilm(obj) {\n  return fetch(`${BASE_URL}/watches.json`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(obj),\n  }).then(r => r.json());\n}\n\nexport default setWatchedFilm;\n","const BASE_URL = 'https://filmoteka-f211d-default-rtdb.europe-west1.firebasedatabase.app';\n\nfunction setQueueFilm(obj) {\n  return fetch(`${BASE_URL}/queues.json`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(obj),\n  }).then(r => r.json());\n}\n\nexport default setQueueFilm;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '30b880cb8af36a78b014f41021bfb163';\n\nasync function fetchSearchMovies(searchValue) {\n  if (!searchValue) {\n    return;\n  }\n  try {\n    const response = await fetch(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchValue}`,\n    );\n    const movies = response.json();\n    return movies;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport default fetchSearchMovies;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '30b880cb8af36a78b014f41021bfb163';\n\nasync function fetchFavoritesMovies() {\n  try {\n    const response = await fetch(`${BASE_URL}/trending/movie/week?api_key=${API_KEY}`);\n    const movies = response.json();\n    return movies;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport default fetchFavoritesMovies;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '30b880cb8af36a78b014f41021bfb163';\n\nasync function fetchDetailsMovie(id) {\n  try {\n    const response = await fetch(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n    const movies = response.json();\n    return movies;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport default fetchDetailsMovie;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '30b880cb8af36a78b014f41021bfb163';\n\nasync function fetchGenresMovies() {\n  try {\n    const response = await fetch(`${BASE_URL}/genre/movie/list?api_key=${API_KEY}`);\n    const movies = response.json();\n    return movies;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport default fetchGenresMovies;\n","const refs = {\n  gallery: document.querySelector('.list_film'),\n  library: document.querySelector('[data-library]'),\n  home: document.querySelector('[data-home]'),\n  navigate: document.querySelector('.navigate__list'),\n};\nexport default refs;\n","const genres = [\n  { id: 28, name: 'Action' },\n  { id: 12, name: 'Adventure' },\n  { id: 16, name: 'Animation' },\n  { id: 35, name: 'Comedy' },\n  { id: 80, name: 'Crime' },\n  { id: 99, name: 'Documentary' },\n  { id: 18, name: 'Drama' },\n  { id: 10751, name: 'Family' },\n  { id: 14, name: 'Fantasy' },\n  { id: 36, name: 'History' },\n  { id: 27, name: 'Horror' },\n  { id: 10402, name: 'Music' },\n  { id: 9648, name: 'Mystery' },\n  { id: 10749, name: 'Romance' },\n  { id: 878, name: 'Science Fiction' },\n  { id: 10770, name: 'TV Movie' },\n  { id: 53, name: 'Thriller' },\n  { id: 10752, name: 'War' },\n  { id: 37, name: 'Western' },\n];\n\nexport default genres;\n","function preloader() {\n    return  window.onload = function () {\n    document.body.classList.add('loaded_hiding');\n    window.setTimeout(function () {\n    document.body.classList.add('loaded');\n    document.body.classList.remove('loaded_hiding');\n    }, 500);\n    }\n}\n\nexport default preloader;","import fetchFavoritesMovies from '../api/fetchFavoritesMovies';\n\nimport refs from '../ollRefs/refs';\n\nimport arrayGenres from './arrayGenres';\n\nimport preloader from './preloader';\n\nfunction getGenres(arrayId) {\n  const arr = [];\n  for (const value of arrayGenres) {\n    if (arrayId.includes(value.id)) {\n      arr.push(value.name);\n    }\n  }\n  if (arrayId.length > 2) {\n    arr.splice(2, arr.length - 2, 'Other');\n  }\n\n  return arr.join(', ');\n}\n\nfunction renderGallery(movies) {\n  return movies\n    .map(({ id, poster_path, title, release_date, genre_ids }) => {\n      const releaseYear = release_date.split('-')[0];\n      return `\n      <li class='list_film_item' id=${id}>\n        <img class=\"list_film_image\" style = \"border-radius: 5px\" src='https://image.tmdb.org/t/p/w500${poster_path}' alt='Обложка фильма' loading='lazy' />\n        <div class='info'>\n            <p class='info-title'>\n              <b>${title}</b>\n            </p>\n            <p class='info-date'>\n              <span>${getGenres(genre_ids)} | ${releaseYear}</span>\n            </p>\n        </div>\n      </li>\n      `;\n    })\n    .join('');\n}\n\nfetchFavoritesMovies().then(data => {\n  preloader();\n  refs.gallery.insertAdjacentHTML('beforeend', renderGallery(data.results));\n});\n\nfunction returnToHome(e) {\n  e.preventDefault();\n\n  if (refs.home.classList.contains('active')) {\n    return;\n  }\n\n  refs.home.classList.add('active');\n  refs.library.classList.remove('active');\n\n  fetchFavoritesMovies().then(data => {\n    preloader();\n\n    refs.gallery.innerHTML = '';\n    refs.gallery.insertAdjacentHTML('beforeend', renderGallery(data.results));\n  });\n}\n\nrefs.home.addEventListener('click', returnToHome);\n","import refs from '../ollRefs/refs';\nimport arrayGenres from './arrayGenres';\nimport getWatchesFilms from '../db/getWatchesFilms';\nimport fetchSearchMovies from '../api/fetchSearchMovies';\nimport fetchFavoritesMovies from '../api/fetchFavoritesMovies';\nimport preloader from './preloader';\n\nfunction getGenres(arrayId) {\n  const arr = [];\n  for (const value of arrayGenres) {\n    if (arrayId.includes(value.id)) {\n      arr.push(value.name);\n    }\n  }\n  if (arrayId.length > 2) {\n    arr.splice(2, arr.length - 2, 'Other');\n  }\n\n  return arr.join(', ');\n}\n\nfunction renderGalleryLibrary(movies) {\n  return movies\n    .map(({ id, poster_path, title, release_date, genres, vote_average }) => {\n      let arrayId = [];\n      for (const value of genres) {\n        arrayId.push(value.id);\n      }\n      const releaseYear = release_date.split('-')[0];\n      return `\n      <li class='list_film_item' id=${id}>\n        <img class=\"list_film_image\" style = \"border-radius: 5px\" src='https://image.tmdb.org/t/p/w500${poster_path}' alt='Обложка фильма' loading='lazy' />\n        <div class='info'>\n            <p class='info-title'>\n              <b>${title}</b>\n            </p>\n            <p class='info-date'>\n              <span>${getGenres(arrayId)} | ${releaseYear}</span>\n              <span class=\"info-average\">${vote_average}</span>\n            </p>\n        </div>\n      </li>\n      `;\n    })\n    .join('');\n}\n\nfunction onFetchLibrary(e) {\n  e.preventDefault();\n\n  if (refs.library.classList.contains('active')) {\n    return;\n  }\n\n  refs.home.classList.remove('active');\n  refs.library.classList.add('active');\n\n  getWatchesFilms().then(data => {\n    const movies = Object.values(data);\n    preloader();\n\n    refs.gallery.innerHTML = '';\n    refs.gallery.insertAdjacentHTML('beforeend', renderGalleryLibrary(movies));\n  });\n}\n\nrefs.library.addEventListener('click', onFetchLibrary);\n","//======= DB Firebase =======\nimport getWatchesFilms from './js/db/getWatchesFilms';\nimport getQueuesFilms from './js/db/getQueuesFilms';\nimport removeAllWatchesFilms from './js/db/removeAllWatchesFilms';\nimport removeAllQueuesFilms from './js/db/removeAllQueuesFilms';\nimport removeWatchedFilm from './js/db/removeWatchedFilm';\nimport removeQueueFilm from './js/db/removeQueueFilm';\nimport setWatchedFilm from './js/db/setWatchedFilm';\nimport setQueueFilm from './js/db/setQueueFilm';\n\n//======= API Service =======\nimport fetchSearchMovies from './js/api/fetchSearchMovies';\nimport fetchFavoritesMovies from './js/api/fetchFavoritesMovies';\nimport fetchDetailsMovie from './js/api/fetchDetailsMovie';\nimport fetchGenresMovies from './js/api/fetchGenresMovies';\n\n//======= Styles =======\nimport './sass/main.scss';\n\n//======= Main =======\nimport renderMain from './js/main/renderMain';\nimport renderMainLibrary from './js/main/renderMainLibrary';\n"]}